#!/bin/bash
# chkconfig: 345 22 16
# description: Configure the system for rBuilder Appliance on startup
# 
# Copyright (c) 2008 rPath, Inc
# All rights reserved

. /etc/sysconfig/pgsql/postgresql-rbuilder
export PGDATA PGPORT

pgsql_config="/etc/postgresql.conf.rbuilder"
pgsql_config_target="$PGDATA/postgresql.conf"

function waitForPg()
{
  echo "Waiting for postgres startup to complete"
  ready="false"
  retries=4
  while [ "$ready" == "false" ]
  do
    psql -U postgres -l >/dev/null
    rc=$?
    if [ "$rc" -eq 0 ]
    then
      ready="true"
    elif [[ "$rc" -eq 2 && "$retries" -ne 0 ]]
    then
      retries=$(( $retries - 1 ))
      sleep 4
    else
      echo "Failed waiting for Postgres"
      exit 1
    fi
  done
}


function createPgDb()
{
  createlang -U postgres plpgsql template1 2>/dev/null
  if [ "$?" -ne 0 -a  "$?" -ne 2 ]
  then
    echo "Failed enabling plpgsql"
    exit 1
  fi
}

case "$1" in
start)
  if [ "`ps -A | grep httpd | grep -v lighttpd | grep -v grep`" != "" ]
  then
    echo "httpd is running. Please stop that service before running this script" > /dev/stderr
    exit 1
  fi

  if [ ! -f /var/lock/subsys/postgresql-rbuilder ]
  then
    service postgresql-rbuilder start
  fi

  # Copy our config file over the one generated during initialization
  # and restart PostgreSQL. The DB must already be initialized, or it
  # will fail to do so once the config is written, hence we still must
  # start it above.
  if [ "$pgsql_config" -nt "$pgsql_config_target" ]
  then
    echo "Updating PostgreSQL configuration"
    waitForPg
    cp "$pgsql_config" "$pgsql_config_target"
    service postgresql restart
  fi


  waitForPg
  createPgDb
  ;;
stop)
  ;;
*)
  echo "Usage $0 {start | stop}"
  ;;
esac
