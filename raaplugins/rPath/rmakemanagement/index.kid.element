<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 

<?python
import raa.templates.master
import raa.templates.tabbedpagewidget
from raa.web import makeUrl, getConfigValue
from rPath import rmakemanagement
from rPath.rmakemanagement import pageList
?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:py="http://purl.org/kid/ns#"
      py:extends="raa.templates.master, raa.templates.tabbedpagewidget">

<!--
    Copyright (c) 2008 rPath, Inc.
    All Rights Reserved
-->    

<head>
    <title>${getConfigValue('product.productName')}: rMake Management</title>

    <script type="text/javascript">
    //addLoadEvent(rAPA.RoundedButton.init);

    function doAct(server, action, msg)
    {
        var p = new Post('changeServerState', ['action'], [action]);
        var d = p.doAction();
        d = d.addCallback(reloadNoHistory);
    }

    function toggleBuildLog(link, expand, collapse, buildId) {
        var el = $(buildId);
        if(null == el) {
            return;
        }
        if(link.src.match("expand")) {
            link.src = collapse;
            el.style.display = '';
            normal = collapse;
            hover = collapse_h;
            readLog(buildId)
        } else {
            link.src = expand;
            el.style.display = 'none';
            normal = expand;
            hover = expand_h;
        }
    }

    function toggleEditNode(link, show, edit_node) {
        var el = $(edit_node);
        if(null == el) {
            return;
        }
        if(show == '1') {
            el.style.display = '';
        } else {
            el.style.display = 'none';
        }
    }

    function scrollToBottom()
    {
        var viewer = $("viewer");
        viewer.scrollTop = viewer.scrollHeight;
    }

    function readLog(buildId)
    {
        var d = new Post('getBuildLog', ['buildId'], [buildId]).doAction();
        d = d.addCallback(callbackGetLogData, buildId);
    }

    function callbackGetLogData(buildId, req){
        var logData = req.logText;
        var viewer = $("viewer-" + buildId);
        viewer.value = logData;
        scrollToBottom();
        return req;
    }

    function editNode(node, slots, chrootLimit){
        slots_el = $(slots)
        slots_v = slots_el.value
        chrootLimit_el = $(chrootLimit)
        chrootLimit_v = chrootLimit_el.value
        var p = new Post('editNode', ['node', 'slots', 'chrootLimit'], [node, slots_v, chrootLimit_v]);
        var d = p.doAction();
        d = d.addCallback(reloadNoHistory);
    }
    </script>


    <script type="text/javascript">
        if (typeof(rAPA.rMakeManagement) == 'undefined') {
            rAPA.rMakeManagement = {};
        }

        rAPA.rMakeManagement.EditNode = function () {};

        rAPA.rMakeManagement.EditNode.prototype =
            merge(new rAPA.Widgets.EditableElementTable,
        {

            postDelete: function(elementIndex) {
                var username = this.elementList[elementIndex]['username'];
                var p = new Post('deleteUser', ['username'], [username]);
                return p.doAction();
            },

            postSave: function() {
                var url = 'editNode'
                var data = this.getDataFromEditRow();
                var p =  new Post(url, keys(data), values(data));
                return p.doAction();
            },

            getDataFromEditRow: function() {
                return {'username': $('username').value,
                        'pwd1':     $('adminpwd').value,
                        'pwd2':     $('newpw1').value,
                        'pwd3':     $('newpw2').value,
                        'groups':   this.getMultiListSelections('user-groups') };
            },

            putDataInEditRow: function() {
                var data = this.elementList[this.elementIndex];

            },

            updateElementRow: function () {
                var data = this.getDataFromEditRow();
                this.elementRow.cells[0].textContent = data['username'];
                this.elementRow.cells[1].textContent = data['groups'].join(', ');
                this.elementList[this.elementIndex] = { 'username': data['username'],
                                                        'groups': data['groups'] };

            },

            init: function(elementList) {
                this.elementList = elementList;
                this.elementTable = $('elements');
                this.editDiv = $('edit-element');

                this.rowTemplate = $('tr-template').cloneNode(true);
                removeElement('tr-template');

                this.noElements = $('elements-none').cloneNode(true);
                if (elementList.length > 0) {
                    removeElement('elements-none');
                }

                this.elementRow = null;
                this.elementIsNew = false;
                this.editRow = null;

                forEach(this.getRows(), this.connectElementRow, this);
                forEach($$$('.element-list-save'), function (x) {
                        connect(x, 'onclick', this, '_onSaveEditRow') }, this);
                forEach($$$('.element-list-cancel'), function (x) {
                        connect(x, 'onclick', this, '_onCancelEditRow') }, this);
            },

        });
    </script>

    <script type="text/javascript">
        <![CDATA[
            var userlist = null;
            addLoadEvent(function() {
                editnode = new rAPA.rMakeManagement.EditNode();
                editnode.init(['dhcp182']);
            });
        ]]>
    </script>

</head>

<body>
    <?python
    instructions = "Use this page to manage the rMake server."
    start = makeUrl('/static/images/icon_start.gif')
    start_h = makeUrl('/static/images/icon_start_h.gif')
    stop = makeUrl('/static/images/icon_stop.gif')
    stop_h = makeUrl('/static/images/icon_stop_h.gif')
    restart = makeUrl('/static/images/icon_restart.gif')
    restart_h = makeUrl('/static/images/icon_restart_h.gif')
    expand_h = makeUrl('/static/images/icon_expand_h.gif');
    expand = makeUrl('/static/images/icon_expand.gif');
    collapse_h = makeUrl('/static/images/icon_collapse_h.gif');
    collapse = makeUrl('/static/images/icon_collapse.gif');
    edit_h = makeUrl('/static/images/icon_edit_h.gif')
    edit = makeUrl('/static/images/icon_edit.gif')
    ?>

    <div class="plugin-page" id="plugin-page">
        <div class="page-content">
            <div py:if="raa.identity.ADMINROLE in raa.identity.current.permissions" py:strip="True">
                 ${TabbedPageWidget(forcepage='index', value=pageList)} 
            </div>
            <div py:replace="display_instructions(instructions, raaInWizard)"> </div>

            <!--SERVER MANAGEMENT SECTION-->
            <div class="page-section">
            rMake Server Management
            </div>
            <div class="page-section-content">
                <table id="service-details">
                    <tr class="headers">
                        <td>rMake Server</td>
                        <td class="button-column">Status</td>
                        <td class="button-column">Start</td>
                        <td class="button-column">Stop</td>
                        <td class="button-column">Restart</td>
                        <td class="button-column">Reset</td>
                    </tr>

                    <form action="javascript:void(0);">
                        <div py:if="server is not None">
                            <tr>
                                <td>${server}</td>
                                <td class="button-column">${rmakemanagement.status.toString[status]}</td>
                                <td class="button-column service-action">
                                <input py:if="status != rmakemanagement.status.RUNNING" type="image" title="start" class="image" src="${start}" onclick="javascript:doAct('${server}', '${rmakemanagement.action.START}', 'Starting ${server} ...');" onMouseOver="this.src = '${start_h}'" onMouseOut="this.src = '${start}'"/>
                                <img py:if="status == rmakemanagement.status.RUNNING" type="image" title="start" src="${makeUrl('/static/images/icon_start_d.gif')}"/></td>
                                <td class="button-column service-action">
                                <input py:if="status != rmakemanagement.status.STOPPED" type="image" title="stop" class="image" src="${stop}" onclick="javascript:doAct('${server}', '${rmakemanagement.action.STOP}', 'Stopping ${server} ...');" onMouseOver="this.src = '${stop_h}'" onMouseOut="this.src = '${stop}'"/>
                                <img py:if="status == rmakemanagement.status.STOPPED" type="image" title="stop" src="${makeUrl('/static/images/icon_stop_d.gif')}"/></td>
                                <td class="button-column service-action">
                                <input py:if="status != rmakemanagement.status.STOPPED" type="image" title="restart" class="image" src="${restart}" onclick="javascript:doAct('${server}', '${rmakemanagement.action.RESTART}', 'Restarting ${server} ...');" onMouseOver="this.src = '${restart_h}'" onMouseOut="this.src = '${restart}'" />
                                <img py:if="status == rmakemanagement.status.STOPPED" type="image" title="restart" src="${makeUrl('/static/images/icon_restart_d.gif')}"/></td>
                                <td class="button-column service-action">
                                <input type="image" title="reset" class="image" src="${restart}" onclick="javascript:doAct('${server}', '${rmakemanagement.action.RESTART}', 'Resetting ${server} ...');" onMouseOver="this.src = '${restart_h}'" onMouseOut="this.src = '${restart}'" /></td>
                            </tr>
                        </div>
                        <div py:if="server is None">
                        </div>
                    </form>
                </table>
            </div>

            <!--NODE SECTION-->
            <div py:if="len(nodes) > 0" class="page-section">
            rMake Node Management
            </div>
            <div py:if="len(nodes) > 0" class="page-section-content">
                <table id="elements">

                    <tr id='edit-element' style="display: none;">
                        <td colspan="5">
                        <form>
                        <div class="edit-line">
                            <label for="slots" class="user-label">Slots:</label>
                            <input type="text" id="slots" name="slots" value="" />
                        </div>
                        <div class="edit-line">
                            <label for="chrootLimit" class="user-label">chrootLimit:</label>
                            <input type="text" id="chrootLimit" name="chrootLimit" value="" />
                        </div>
                        <div style="height: 30px">&nbsp;</div>
                        <div class="button-line">
                            <a class="rnd_button small float-right element-list-save" href="">Save</a>
                            <a class="rnd_button small gray float-right element-list-cancel" href="">Cancel</a>
                        </div>
                        </form>
                        </td>
                    </tr>

                    <tr class="headers">
                        <td>rMake Node</td>
                        <td class="button-column">Status</td>
                        <td class="button-column">Start</td>
                        <td class="button-column">Stop</td>
                        <td class="button-column">Restart</td>
                        <td class="button-column">Reset</td>
                        <td class="button-column">Edit</td>
                    </tr>

                    <tr style="display: none;" id="tr-template">
                        <td></td>
                        <td class="button-column"></td>
                        <td class="button-column service-action"></td>
                        <td class="button-column service-action"></td>
                        <td class="button-column service-action"></td>
                        <td class="button-column service-action"></td>
                        <td class="button-column button-action element-list-edit"><a href="javascript:void(0);"><img src="${edit}" onMouseOver="this.src = '${edit_h}'" onMouseOut="this.src = '${edit}'"/></a></td>
                   </tr>

                    <tr id="elements-none" style="display: none;">
                        <td colspan="4">No nodes defined.</td>
                    </tr>

                    <div py:for="node in nodes.keys()" py:strip="True">
                    <tr id="tr-0">
                        <td>${node}</td>
                        <td class="button-column">${rmakemanagement.status.toString[nodes[node][2]]}</td>
                        <td class="button-column service-action">
                        <input py:if="nodes[node][2] != rmakemanagement.status.RUNNING" type="image" title="start" class="image" src="${start}" onclick="javascript:doAct('${node[0]}', '${rmakemanagement.action.START}', 'Starting ${node[0]} ...');" onMouseOver="this.src = '${start_h}'" onMouseOut="this.src = '${start}'"/>
                        <img py:if="nodes[node][2] == rmakemanagement.status.RUNNING" type="image" title="start" src="${makeUrl('/static/images/icon_start_d.gif')}"/></td>
                        <td class="button-column service-action">
                        <input py:if="nodes[node][2] != rmakemanagement.status.STOPPED" type="image" title="stop" class="image" src="${stop}" onclick="javascript:doAct('${node[0]}', '${rmakemanagement.action.STOP}', 'Stopping ${node[0]} ...');" onMouseOver="this.src = '${stop_h}'" onMouseOut="this.src = '${stop}'"/>
                        <img py:if="nodes[node][2] == rmakemanagement.status.STOPPED" type="image" title="stop" src="${makeUrl('/static/images/icon_stop_d.gif')}"/></td>
                        <td class="button-column service-action">
                        <input py:if="nodes[node][2] != rmakemanagement.status.STOPPED" type="image" title="restart" class="image" src="${restart}" onclick="javascript:doAct('${node[0]}', '${rmakemanagement.action.RESTART}', 'Restarting ${node[0]} ...');" onMouseOver="this.src = '${restart_h}'" onMouseOut="this.src = '${restart}'" />
                        <img py:if="nodes[node][2] == rmakemanagement.status.STOPPED" type="image" title="restart" src="${makeUrl('/static/images/icon_restart_d.gif')}"/></td>
                        <td class="button-column service-action">
                        <input py:if="nodes[node][2] != rmakemanagement.status.STOPPED" type="image" title="reset" class="image" src="${restart}" onclick="javascript:doAct('${node[0]}', '${rmakemanagement.action.RESTART}', 'Restarting ${node[0]} ...');" onMouseOver="this.src = '${restart_h}'" onMouseOut="this.src = '${restart}'" />
                        <img py:if="nodes[node][2] == rmakemanagement.status.STOPPED" type="image" title="reset" src="${makeUrl('/static/images/icon_restart_d.gif')}"/></td>
                        <td class="button-column button-action element-list-edit"><a href="javascript:void(0);"><img src="${edit}" onMouseOver="this.src = '${edit_h}'" onMouseOut="this.src = '${edit}'"/></a></td>
                    </tr>
                    </div>

                </table>
            </div>

            <div></div>
            <!--BUILD SECTION-->
            <div class="page-section">
            Builds
            </div>
            <div class="page-section-content">
                <table id="service-details">
                    <tr class="headers">
                        <td>Build Id</td>
                        <td>Trove Name</td>
                        <td>Completed Time</td>
                        <td class="button-column">View build log</td>
                    </tr>
                    <div py:strip="True" py:for="build in builds">
                        <tr> 
                            <td><span class="emphasis">${build[0]}</span></td>
                            <td>${build[1]}</td>
                            <td>${build[2]}</td>
                            <td class="button-column">
                            <img src="${makeUrl('/static/images/icon_expand.gif')}" onclick="javascript:toggleBuildLog(this, expand, collapse, '${build[0]}')" style="cursor: pointer; vertical-align: text-top; padding-right: 4px;" onMouseOver="this.src = this.src.match('expand') ? expand_h : collapse_h" onMouseOut="this.src = this.src.match('expand') ? expand : collapse"/>
                            </td>
                        </tr>
                        <tr id="${build[0]}" style="display: none; background: #f8f8f8;">
                            <td colspan="4">
                                <div id="log-console">
                                    <textarea readonly="True" class="console" id="viewer-${build[0]}"></textarea>
                                </div>
                            </td>
                        </tr>
                    </div>
                </table>
            </div>

        </div>
    </div>
</body>
</html>
