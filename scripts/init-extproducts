#!/usr/bin/python
import os
import sys
import traceback

from conary import conarycfg

from mint import config
from mint import mint_error
from mint import helperfuncs
from mint import scriptlibrary
from mint import shimclient


class InitializeExternalRepositories(scriptlibrary.SingletonScript):
    cfgPath = config.RBUILDER_CONFIG
    conaryCfgPath = config.CONARY_CONFIG
    
    def action(self):
        mintConfig = config.getConfig(self.cfgPath)
        if not mintConfig.configured:
            print ('warning: not adding external default projects as '
                    'initial setup has not been run')
            return 0
        conaryCfg = conarycfg.ConaryConfiguration(False)
        conaryCfg.read(self.conaryCfgPath)
        conaryCfg.readEntitlementDirectory()
        mintClient = shimclient.ShimMintClient(mintConfig, 
                                               (mintConfig.authUser,
                                                mintConfig.authPass))
        errors = helperfuncs.initializeExternalProjects(mintClient, conaryCfg)
        return errors

if __name__ == "__main__":
    init = InitializeExternalRepositories()
    sys.exit(init.run())
