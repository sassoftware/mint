#!/usr/bin/python
import optparse
import re
import json
import sys
from conary import dbstore
from mint import config

PEM = re.compile('^(-----BEGIN (?:CERTIFICATE|PRIVATE KEY)-----)(.*)(-----END (?:CERTIFICATE|PRIVATE KEY)-----)$', re.S)


def main(args):
    op = optparse.OptionParser()
    op.add_option('-c', '--config', help="Path to the rBuilder config file",
            default=config.RBUILDER_CONFIG)
    options, args = op.parse_args()
    if args:
        op.error("Expected no arguments")

    cfg = config.MintConfig()
    cfg.read(options.config)
    db = dbstore.connect(cfg.dbPath, cfg.dbDriver)
    cu = db.transaction()
    cu.execute("""SELECT targetId, name, value FROM TargetData
            WHERE name IN ('ec2Certificate', 'ec2CertificateKey')""")
    cu2 = db.cursor()
    found = False
    for targetId, name, value in cu:
        found = True
        value = json.loads(value)
        if '\n' in value:
            print "Field %r on target %d is OK" % (name, targetId)
            continue

        match = PEM.match(value)
        if not match:
            print "Couldn't grok field %r on target %d" % (name, targetId)
            print "Value: %r" % (value,)
            continue

        leader, body, trailer = match.groups()
        newValue = leader + '\n'
        while body:
            newValue += body[:76] + '\n'
            body = body[76:]
        newValue += trailer + '\n'

        newValue = json.dumps(newValue)
        cu2.execute("""UPDATE TargetData SET value = ?
                WHERE targetId = ? AND name = ?""",
                newValue, targetId, name)
        print 'Fixed field %r on target %d' % (name, targetId)

    if not found:
        print "No EC2 certificates to fix"

    db.commit()
    db.close()


if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
