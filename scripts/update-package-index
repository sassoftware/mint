#!/usr/bin/python
#
# Copyright (c) 2005 rpath, Inc.
#
# All rights reserved
#
import conary
import sqlite3

from mint import pkgindex
from repository import netclient
from repository import repository

dbPath = "/srv/mint/data/db"
db = sqlite3.connect(dbPath, timeout = 30000)

pkgIdx = pkgindex.PackageIndexTable(db)

cu = db.cursor()
cu.execute("SELECT projectId, hostname || '.' || domainname FROM Projects WHERE hidden=0 AND disabled=0")

repMap = {'conary.rpath.com': 'http://conary.rpath.com/conary/',
          'contrib.rpath.com': 'http://contrib.rpath.com/conary/'}
projectIds = {'conary.rpath.com': 0, 'contrib.rpath.com': 0}
for r in cu.fetchall():
    projectIds[r[1]] = r[0]
    repMap[r[1]] = "http://%s/conary/" % (r[1])


repos = netclient.NetworkRepositoryClient(repMap)

rows = []
for host in repMap.keys():
    try:
        troves = repos.getAllTroveLeaves(host, {None: [None]})
    except repository.OpenError:
        print "warning: unable to access %s" % host
        continue
        
    pkgs = [x for x in troves.keys() if ':' not in x]
    
    for pkg in pkgs:
        latestVer = sorted(troves[pkg].keys(), reverse = True)[0]
        row = (projectIds[host], pkg, latestVer.asString())
        rows.append(row)

try:
    cu.execute("DELETE FROM PackageIndex")
    for row in rows:
        cu.execute("INSERT INTO PackageIndex VALUES (NULL, ?, ?, ?)", *row)
except:
    db.rollback()
    raise
else:
    db.commit()
