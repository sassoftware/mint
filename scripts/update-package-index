#!/usr/bin/python
#
# Copyright (c) 2005 rPath, Inc.
#
# All rights reserved
#
from mint import config
from conary import dbstore

cfgPath = "/srv/mint/mint.conf"

cfg = config.MintConfig()
cfg.read(cfgPath)

db = dbstore.connect(cfg.dbPath, driver = cfg.dbDriver)
db.connect()
cu = db.cursor()

try:
    # get a list of the latest version of each package
    # comparing version strings isn't technically reliable, so we must use the
    # latest timestamp to verify
    cu.execute("""SELECT projectId, troveName, max(timestamp)
                      FROM Commits
                      WHERE troveName NOT LIKE '%:%'
                      GROUP BY projectId, troveName""")

    for projectId, troveName, maxTime in cu.fetchall():
        cu.execute("""SELECT version from Commits
                          WHERE projectId=? AND troveName=? and timestamp=?""",
                   projectId, troveName, maxTime)

        # at least one result will always exist. there should be only one.
        version = cu.fetchone()[0]

        cu.execute("""SELECT pkgId FROM PackageIndex
                          WHERE projectId=? AND name=?""",
                   projectId, troveName)
        res = cu.fetchone()
        if not res:
            cu.execute("""INSERT INTO PackageIndex (projectId, name, version)
                              VALUES (?, ?, ?)""",
                       projectId, troveName, version)
            pass
        else:
            pkgId = res[0]
            cu.execute("""UPDATE PackageIndex SET
                                  projectId=?, name=?, version=?
                                  WHERE pkgId=?""",
                       projectId, troveName, version, pkgId)

except:
    db.rollback()
    raise
else:
    db.commit()
