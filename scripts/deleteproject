#!/usr/bin/python
import os
import sys
import traceback

from conary import conarycfg

from mint import config
from mint import mint_error
from mint import helperfuncs
from mint import scriptlibrary
from mint import shimclient

class DeleteProject(scriptlibrary.SingletonScript):
    cfgPath = config.RBUILDER_CONFIG
    conaryCfgPath = config.CONARY_CONFIG
    startArg = 1
    
    def run(self):
        if not sys.argv[1:]:
            dp.usage()
        
        # make sure they want to do it
        self.confirm()
        
        if sys.argv[1].startswith('--xyzzy='):
            self.startArg = 2
            _, self.cfgPath =  sys.argv[1].split('=')
            print "Test mode using configuration from %s" % self.cfgPath
        else:
            if os.getuid():
                print >> sys.stderr, "Error: %s must be run as root" % sys.argv[0]
                sys.stderr.flush()
                sys.exit(1)
        
        mintConfig = config.getConfig(self.cfgPath)
        conaryCfg = conarycfg.ConaryConfiguration(False)
        conaryCfg.read(self.conaryCfgPath)
        conaryCfg.readEntitlementDirectory()
        mintClient = shimclient.ShimMintClient(mintConfig, 
                                               (mintConfig.authUser,
                                                mintConfig.authPass))

        for projectName in sys.argv[self.startArg:]:
            print "Deleting '" + projectName + "'..."
            mintClient.deleteProjectByName(projectName)
        
    def usage(self):
        print >> sys.stderr, "Usage: %s project [project] [project] ..." % \
            sys.argv[0]
        print >> sys.stderr, "Each project is referred to by short name only"
        print >> sys.stderr, '(i.e. use "rpath" instead of "rPath Linux").'
        sys.stderr.flush()
        sys.exit(1)
        
    def confirm(self):
        print "Executing this script will completely eradicate the following Projects:"
        print '\n'.join(sys.argv[self.startArg:])
        print "If you do not have backups, it will be impossible to recover from this."
        print "are you ABSOLUTELY SURE you want to do this? [yes/N]"
        answer = sys.stdin.readline()[:-1]
        if answer.upper() != 'YES':
            if answer.upper() not in ('', 'N', 'NO'):
                print >> sys.stderr, "you must type 'yes' if you truly want to delete",
                print >> sys.stderr, "these projects."
            print >> sys.stderr, "aborting."
            sys.exit(1)
        
if __name__ == "__main__":
    dp = DeleteProject()
    sys.exit(dp.run())
