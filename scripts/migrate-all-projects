#!/usr/bin/python
#
# Copyright (c) 2006 rPath, Inc.
#
# All rights reserved
#

import os, sys

from mint import config
from mint import maintenance
from mint.projects import mysqlTransTable
from conary import dbstore
from conary.server import schema

cfg = config.MintConfig()
cfg.read(config.RBUILDER_CONFIG)

# check a few important things
ec = os.system('/sbin/service httpd status > /dev/null')
isRunningHttpd = bool((ec >> 8) == 0)
isRunningInMaintenanceMode = (maintenance.getMaintenanceMode(cfg)==maintenance.LOCKED_MODE)

if isRunningHttpd and not isRunningInMaintenanceMode:
    print >> sys.stderr, """
rBuilder repositories are not locked. You must place the site in
maintenance mode or shut down the Apache Web Server (httpd) before
continuing."""
    sys.exit(1)

print "Migrating Conary repository databases for all projects..."

db = dbstore.connect(cfg.dbPath, driver = cfg.dbDriver)
cu = db.cursor()

cu.execute("SELECT hostname, domainname FROM Projects")

if cfg.reposDBDriver == 'sqlite':
    dbNames = [x[0] + "." + x[1] for x in cu.fetchall()]
else:
    dbNames = [x[0] + "_" + x[1].translate(mysqlTransTable) for x in cu.fetchall()]

errors = 0
for dbName, count in zip(dbNames, range(1,len(dbNames)+1)):
    try:
        reposDb = dbstore.connect(cfg.reposDBPath % dbName,
                                  driver = cfg.reposDBDriver)
        schema.loadSchema(reposDb)
    except:
        errors += 1
        e = sys.exc_info()[1]
        if str(e).startswith('Unknown database'):
            continue
        if str(e) == 'unable to open database file':
            continue
        print "error in database: %s\n %s" % (dbName, str(e))

    print "Completed %d of %d" % (count, len(dbNames)), chr(13),
    sys.stdout.flush()

if errors:
    print "\nConary repository migration completed with errors."
    sys.exit(1)

print "\nConary repository migration complete."
sys.exit(0)
