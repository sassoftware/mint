#!/usr/bin/python
#
# Copyright (c) SAS Institute Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


import os
import random
import sys

from mint import config
from mint import shimclient
from mint.db import database
from mint.db import repository


def updatePassword(newPass):
    cfg = config.MintConfig()
    cfg.read(config.RBUILDER_CONFIG)
    db = database.Database(cfg)
    cu = db.db.cursor()
    reposManager = repository.RepositoryManager(cfg, db.db, bypass=True)
    for handle in reposManager.iterRepositories():
        if not handle.hasDatabase:
            continue
        print "Updating project", handle.fqdn
        repoServer = handle.getNetServer()
        repoServer.auth.changePassword(cfg.authUser, newPass)
        reposManager.reset()
        cu.execute("""UPDATE Labels SET username = ?, password = ?
            WHERE projectId = ? AND authtype = 'userpass'""",
            cfg.authUser, newPass, handle.projectId)

    db.commit()

    print "\nUpdating rBuilder configuration"
    genCfg = config.MintConfig()
    genCfg.read(config.RBUILDER_GENERATED_CONFIG)
    genCfg.authPass = newPass
    displayKeys = [x for x in genCfg.keys() if not genCfg.isDefault(x) or x == 'authPass']
    genFile = open(config.RBUILDER_GENERATED_CONFIG, 'w')
    for x in displayKeys:
        genCfg.displayKey(x, out=genFile)
    genFile.close()

    os.system('/sbin/service gunicorn reload')



if os.getuid():
    print >> sys.stderr, "Error: %s must be run as root" % sys.argv[0]
    sys.stderr.flush()
    sys.exit(1)

cfg = config.MintConfig()
cfg.read(config.RBUILDER_CONFIG)

if not sys.argv[1:]:
    print "Executing this script will change the %s password to a randomly" %\
           cfg.authUser
    print "generated value.  Continue? [yes/N]"
    answer = sys.stdin.readline()[:-1]
    if answer.upper() != 'YES':
        if answer.upper() not in ('', 'N', 'NO'):
            print >> sys.stderr, "you must type 'yes' to continue"
        print >> sys.stderr, "aborting."
        sys.exit(1)
    mintPass = ''
    passwdLength = 32
    random = random.SystemRandom()
    for x in range(passwdLength):
        mintPass += random.choice('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')

    updatePassword(mintPass)
else:
    print "Executing this script will change the %s password to '%s'" %\
           (cfg.authUser, sys.argv[1])
    print "Continue? [yes/N]"
    answer = sys.stdin.readline()[:-1]
    if answer.upper() != 'YES':
        if answer.upper() not in ('', 'N', 'NO'):
            print >> sys.stderr, "you must type 'yes' to continue"
        print >> sys.stderr, "aborting."
        sys.exit(1)
    updatePassword(sys.argv[1])
