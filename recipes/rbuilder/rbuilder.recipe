#
# Copyright (c) SAS Institute Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

rbuilder_dirs = {
    'capsules':                     (0775, ('root', 'apache')),
    'catalog':                      (0775, ('root', 'apache')),
    'config':                       (0775, ('root', 'apache')),
    'cscache':                      (0775, ('root', 'apache')),
    'data':                         (0775, ('root', 'apache')),
    'data/credstore':               (0770, ('credstore', 'credstore')),
    'finished-images':              (0775, ('root', 'apache')),
    'jobs':                         (0775, ('root', 'apache')),
    'proxy-contents':               (0775, ('root', 'apache')),
    'repos':                        (0775, ('root', 'apache')),
    'run':                          (0775, ('root', 'apache')),
    'sessions':                     (0770, ('root', 'apache')),
    'storage':                      (0775, ('root', 'apache')),
    'tmp':                          (0775, ('root', 'apache')),
    '/var/log/rbuilder':            (0775, ('root', 'apache')),
    }

class rBuilderProduct(CPackageRecipe):
    name = 'rbuilder'
    version = '8'

    buildRequires = [
        'boto:python',
        'catalog-service:python',
        'conary-repository:python', 
        'conary-rest:python',
        'decorator:python',
        'django-db-postgres:python',
        'django-debug-toolbar:python',
        'django:python',
        'django-rest-interface:python',
        'dnspython:python',
        'docbook-utils',
        'jobslave:python',
        'libxml2-python',
        'm2crypto',
        'mcp:python',
        'mod_python:runtime',
        'pcreator:python',
        'pyOpenSSL',
        'python-beaker',
        'python-dateutil',
        'python-devel',
        'python-epdb:python',
        'python-imaging',
        'python-kid',
        'python-pam:python',
        'python-pgsql:python',
        'python-psycopg2',
        'python-raven',
        'python-twisted:python',
        'python-webob:python',
        'restlib:python',
        'rmake3:python',
        'rmake:python',
        'robj:python',
        'rpath-capsule-indexer:python',
        'rpath-job:python',
        'rpath-models:python',
        'rpath-product-definition:python',
        'rpath-repeater:python',
        'rpath-storage:python',
        'util-linux-ng',
        'vobject:python',
        'xmlto',
        'xobj:python',
      ]

    def setup(r):
        r.macros.sitepkg = '%(libdir)s/python%(pyver)s/site-packages'
        r.unpack()
        r.build()
        r.install()
        r.policy()
        r.macros.pgver = '9.2'

    def unpack(r):
        r.addMercurialSnapshot()

        # If our version includes a mercurial revision, don't include
        # that in shortVersion
        shortVersion, hgRevision = r.version.rsplit('.', 1)
        if len(hgRevision) == 12:
            r.macros.shortVersion = shortVersion
        else:
            r.macros.shortVersion = r.version

    def build(r):
        buildLabel = r.macros.get('buildlabel', 'products.rpath.com@rpath:rba-4')
        r.Make( \
            'VERSION=%s SHORTVER=%s ' % (r.version, r.macros.shortVersion) + \
            'LIBDIR=%(libdir)s '
            'clean all'
            )

    def install(r):
        r.Make('install DESTDIR=%(destdir)s ' + \
            'VERSION=%s SHORTVER=%s ' % (r.version, r.macros.shortVersion) + \
            'LIBDIR=%(libdir)s POSTGRES_VERSION=%(pgver)s')

        # Create apache-owned dirs
        for path, (mode, (user, group)) in rbuilder_dirs.items():
            path = os.path.join('/srv/rbuilder', path)
            r.MakeDirs(path)
            r.SetModes(path, mode)
            r.Ownership(user, group, path)
            r.ExcludeDirectories(exceptions=path)


        # Symlink web toolkits into web-common
        for tk in ('MochiKit', 'yui'):
            target = '%(datadir)s/conary/web-common/apps/' + tk
            r.Symlink('%(servicedir)s/www/html/' + tk, target)
            r.DanglingSymlinks(exceptions=target)
            r.Requires(tk + ':runtime', target)

        # create run directory for authentication service
        r.MakeDirs('/var/lib/twisted-taps/rbuilder-authn')
        r.ExcludeDirectories(exceptions='/var/lib/twisted-taps/rbuilder-authn')

        # compile all .py files into .pyc
        r.CompilePython('/')

    def policy(r):

        # Data directories
        r.Ownership('root', 'jabber', '/usr/share/rbuilder/jabberd')
        r.ExcludeDirectories(exceptions='/srv/rbuilder/pki')

        # These config files are managed at runtime or by the admin, not
        # by conary.
        r.InitialContents(r'%(servicedir)s/rbuilder/config/'
            'rbuilder-(custom|generated).conf')
        r.InitialContents(r'/etc/rmake/(node|server).d/25_rbuilder-rapa.conf')
        r.InitialContents(r'/srv/rbuilder/config/postgresql-custom.conf')
        r.InitialContents(r'/root/.rmakerc')
        r.Config(r'/srv/rbuilder/data/metadataDescriptor.xml')

        # These files contain defaults or stubs and should always be
        # replaced.
        r.Transient(r'%(servicedir)s/rbuilder/config/rbuilder.conf')
        r.Transient(r'/etc/sysconfig/pgsql/postgresql-rbuilder')
        r.Transient(r'/usr/share/rbuilder/postgresql.conf')
        r.Config(exceptions=r'/etc/sysconfig/pgsql/postgresql-rbuilder')

        r.Transient(r'.*/\.keep[^/]*')
        r.Config(exceptions=r'.*/\.keep[^/]*')

        r.Transient(r'/etc/rmake/(noderc|(node|server).d/20_rbuilder.conf)')
        r.Config(exceptions=r'/etc/rmake/(noderc|(node|server).d/20_rbuilder.conf)')

        r.User('credstore', 205, homedir='/srv/rbuilder/data/credstore')

        # rBuilder pieces need to work together with the same version
        r.ComponentProvides('%(version)s')

        r.Requires('python-pgsql:python',
                   '%(sitepkg)s/mint/config.pyc')
        r.Requires('rbuilder:python(%(version)s)',
                   '%(sitepkg)s/mint/web/webhandler.pyc')
        r.Requires('rbuilder:python(%(version)s)',
                   '%(datadir)s/rbuilder/scripts/rbuilder-database')

        # Script runtime dependencies
        r.Requires('/usr/sbin/tmpwatch',
            r'%(sysconfdir)s/cron.daily/rbuilder.tmpwatch')
        r.Requires('/usr/sbin/logrotate',
            r'%(sysconfdir)s/logrotate.d/')
        r.Requires('/usr/bin/qemu-img', '.*/wig/bootable.py.*')
        r.Requires('/usr/bin/twistd', '.*/twisted/plugins/.*')

        # disable reportlab for rbuilder 5.0
        r.Requires(exceptDeps='python: reportlab.*')

        # Make sure that amiconfig isn't required by our amiconfig plugin
        r.Requires(exceptDeps='python: amiconfig.*')

        # Windows ISO builds requires mkisofs
        r.Requires('/usr/bin/mkisofs', '%(libdir)s/rmake3/.*')

        r.PackageSpec('rbuilder-ha',
                '/etc/cron.d/monitor-cluster',
                '/usr/sbin/cluster-status',
                '/usr/sbin/monitor-cluster',
                )

        # Anaconda customization
        # This comes first so it is omitted from the -sources split.
        r.PackageSpec('anaconda-custom', r'/usr/share/anaconda/')

        # Attempt to isolate things that don't work when mint is just a library
        r.ComponentSpec('runtime', '/usr/share/rbuilder/scripts/')

        r.PackageSpec('sasinside-role-master-appengine',
            '/etc/nginx/conf.d/rbuilder-ledger.rbuilder',
            )
