%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This is a temporary file that will contain drafts of any text required for
the public website.  Once any text has been reviewed and approved, it will
be removed from this file and integrated into Mint proper.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Conary configuration for users (always displayed)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

*** FIXME -- add generic pointer to Conary docs ***

You have two options available to you if you want to install software from
this project:

    o You can perform an installation by specifying this project's label as
      part of the conary command

    o You can configure Conary to automatically search this project's label
      so that subsequent conary commands need not explicitly specify it

Which option should I choose?

    It really depends on what your long-term expectations are with respect
to this project.

    If this project has only one trove that interests you, specify the
label as part of the conary command.  Note that this does *not* prevent
Conary from accessing this project's repository to find (and install)
updates to the software you install -- Conary takes care of that for you.

    On the other hand, if this project has lots of interesting troves and
you expect that you'll be coming back from time to time to see what
newly-available software there is, you should configure Conary to
automatically search this project's label.

*How do I do it?*

*Specifying This Project's Label as Part of the Conary command*

    Use the following command format to specify this project's label when
issuing a conary update command:

conary update <trove>=[this project's label]

(Where <trove> represents the name of the trove to be installed.)

*Configuring Conary to Automatically Search this Project's Label*

    To configure Conary to automatically search this project's label you
must use a text editor to add the label to Conary's main configuration
file, /etc/conaryrc.

    NOTE: You must be the root user (either by logging in as root, or by
using the su command) to edit this file.

    The option you must modify is installLabelPath.  This option contains
the list of labels that Conary searches when performing the initial
installation of a trove.  The order of labels in the list determines
the order in which they will be searched.

    You can display the current installLabelPath setting using the
following command:

conary config | grep installLabelPath

If this project's label is already be included in your system's
installLabelPath, you don't need to make any changes at all -- just install
the desired trove using the "conary update" command shown at the end of
this page.

    However, if this project's label is not currently included in your
system's installLabelPath, you must add it.

    Using the text editor of your choice, open /etc/conaryrc, and find the
installLabelPath line.  At this point, you must decide where in the list to
place this project's label.

    In most cases, you can just add the project's label to the end of the
list (Note: even though it can be quite long, the list *must* remain on one
line):

installLabelPath <label1> ... <labelN> [this project's label]

    This approach would not work if one or more labels in the list had
troves with the same names as those in the project's label.  In that case,
this project's label should be inserted before the labels with the
same-named troves:

installLabelPath [this project's label] <label1> ... <labelN>

    Once you've added the project's label, the Conary command you'll use to
install trove's from the project's repository takes the form:

conary update <trove>

(Where <trove> represents the name of the trove to be installed.)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Conary configuration for developers (displayed only for project members)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

* Short version
** Display the project's label
* Long version -- Setting up a Conary build environment
** (Many ways of doing it; this is one possible approach)
** Creating Directories
*** Create a repo-specific directory
**** Create ./src
**** Create ./builds
**** Create ./cache
** Setting up conaryrc files
*** /etc/conaryrc
**** System-wide stuff, best not used to contain build-related settings
*** $HOME/.conaryrc
**** Stuff specific to the developer, like:
***** name
***** contact (may need to be repo-specific depending on the project)
*** ./conaryrc
**** Stuff specific to the repository, like:
***** buildLabel
***** buildPath
***** lookaside
***** repositoryMap (includes username/passwd for repo access -- https!)
**** In ./src, symlink ./conary to ../conaryrc
**** After after each "cvc newpkg" symlink ./conaryrc to ../../conaryrc
** Using PGP keys
*** Uploading your public key
*** Configuring Conary to use your key
**** signatureKey (may by developer- or repo-specific depending on project)
* Pointer to Wiki for packaging tutorial

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Big picture stuff
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

***Need a 'What Next?' section with links to the following:***

Developers:

    o Learning more about Conary
        - Wiki site
        - Nate's tutorial

    o Using Conary:
        - For basic stuff (Conary Day-to-Day)
        - To package software
        - To create a customized Linux distribution (Nate's tutorial?)

    o Managing project membership
        - Adding new members
        - Removing existing members
        - Orphaning a project

    o Managing mailing lists
        - Adding a list
        - Other functions (regular ol' mailman interface)

    o Build system stuff
        - Downloading Darby
        - Installing/configuring Darby

    o Creating a release

Users:

    o Searching
        - For packages
        - For projects

    o Configuration
        - Adding a repo to installLabelPath

    o Download Releases
